{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dewan\\\\Desktop\\\\table\\\\my-app\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Login.css';\n\n// const Login = () => {\n//     const [loginId, setLoginId] = useState('');\n//     const [password, setPassword] = useState('');\n//     const navigate = useNavigate();\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         // Handle login logic here\n//         // If login is successful, navigate to the Dashboard page\n//         navigate('/dashboard');\n//     };\n\n//     const handleForgotPassword = () => {\n//         // Handle forgot password logic here, e.g., redirect to forgot password page\n//         navigate('/forgot-password');\n//     };\n\n//     return (\n//         <div>\n//             <h2>Login</h2>\n//             <form onSubmit={handleLogin}>\n//                 <div>\n//                     <label>Login ID:</label>\n//                     <input\n//                         type=\"text\"\n//                         value={loginId}\n//                         onChange={(e) => setLoginId(e.target.value)}\n//                     />\n//                 </div>\n//                 <div>\n//                     <label>Password:</label>\n//                     <input\n//                         type=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                     />\n//                 </div>\n//                 <button type=\"submit\">Login</button>\n//             </form>\n//             <div>\n//                 <button onClick={handleForgotPassword}>Forgot Password?</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [loginId, setLoginId] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    // Handle login logic here\n    // If login is successful, navigate to the Dashboard page\n    navigate('/dashboard');\n  };\n  const handleForgotPassword = () => {\n    // Handle forgot password logic here, e.g., redirect to forgot password page\n    navigate('/forgot-password');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Login ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: loginId,\n            onChange: e => setLoginId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot-password\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleForgotPassword,\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"gL8fbHnAk+P6YtXXV1NrPdcG19A=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","loginId","setLoginId","password","setPassword","navigate","handleLogin","e","preventDefault","handleForgotPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dewan/Desktop/table/my-app/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import './Login.css';\r\n\r\n// const Login = () => {\r\n//     const [loginId, setLoginId] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleLogin = (e) => {\r\n//         e.preventDefault();\r\n//         // Handle login logic here\r\n//         // If login is successful, navigate to the Dashboard page\r\n//         navigate('/dashboard');\r\n//     };\r\n\r\n//     const handleForgotPassword = () => {\r\n//         // Handle forgot password logic here, e.g., redirect to forgot password page\r\n//         navigate('/forgot-password');\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Login</h2>\r\n//             <form onSubmit={handleLogin}>\r\n//                 <div>\r\n//                     <label>Login ID:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         value={loginId}\r\n//                         onChange={(e) => setLoginId(e.target.value)}\r\n//                     />\r\n//                 </div>\r\n//                 <div>\r\n//                     <label>Password:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                     />\r\n//                 </div>\r\n//                 <button type=\"submit\">Login</button>\r\n//             </form>\r\n//             <div>\r\n//                 <button onClick={handleForgotPassword}>Forgot Password?</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const [loginId, setLoginId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // Handle login logic here\r\n        // If login is successful, navigate to the Dashboard page\r\n        navigate('/dashboard');\r\n    };\r\n\r\n    const handleForgotPassword = () => {\r\n        // Handle forgot password logic here, e.g., redirect to forgot password page\r\n        navigate('/forgot-password');\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"login-box\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <div>\r\n                        <label>Login ID:</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={loginId}\r\n                            onChange={(e) => setLoginId(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label>Password:</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\">Login</button>\r\n                </form>\r\n                <div className=\"forgot-password\">\r\n                    <button onClick={handleForgotPassword}>Forgot Password?</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}